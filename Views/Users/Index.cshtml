@using Training_Management_System_ITI_Project.enums
@model Training_Management_System_ITI_Project.ViewModels.UserListViewModel

@{
    ViewData["Title"] = "Users";
}

<h2>Users Management</h2>

<p>
    <a asp-action="Create" class="btn btn-primary">Create New User</a>
</p>

<form asp-action="Index" method="get" class="mb-3">
    <div class="row">
        <div class="col-md-4">
            <select name="filterByRole" class="form-control" onchange="this.form.submit()">
                <option value="">-- All Roles --</option>
                @foreach (var role in Enum.GetValues<UserRole>())
                {
                    <option value="@role" selected="@(Model.FilterByRole == role)">@role</option>
                }
            </select>
        </div>
        <div class="col-md-2">
            <a asp-action="Index" class="btn btn-secondary">Clear Filter</a>
        </div>
    </div>
</form>

<div class="table-responsive">
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Name</th>
                <th>Email</th>
                <th>Role</th>
                <th>Actions</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model.Users)
            {
                <tr>
                                        <td>@Html.DisplayFor(modelItem => item.FullName)</td>
                    <td>@Html.DisplayFor(modelItem => item.Email)</td>
                    <td>
                        <span class="badge badge-@(item.Role == UserRole.Admin ? "danger" : 
                                                   item.Role == UserRole.Instructor ? "primary" : "success")">
                            @Html.DisplayFor(modelItem => item.Role)
                        </span>
                    </td>
                    <td>
                        <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-warning">Edit</a>
                        <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-info">Details</a>
                        @if (item.Role == UserRole.Trainee)
                        {
                            <a asp-controller="Grades" asp-action="TraineeGrades" asp-route-id="@item.Id" class="btn btn-sm btn-secondary">Grades</a>
                        }
                        <a asp-action="Delete" asp-route-id="@item.Id" class="btn btn-sm btn-danger">Delete</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
</div>

@if (!Model.Users.Any())
{
    <div class="alert alert-info">
        <h4>No users found</h4>
        <p>@(Model.FilterByRole.HasValue ? $"No users with role '{Model.FilterByRole}' found." : "No users have been created yet.")</p>
    </div>
}
